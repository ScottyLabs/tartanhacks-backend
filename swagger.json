{
  "openapi": "3.0.1",
  "info": {
    "title": "TartanHacks Backend",
    "version": "0.0.1"
  },
  "basePath": "/",
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-access-token"
      }
    }
  },
  "paths": {
    "/admin/new/{id}": {
      "post": {
        "summary": "Make a user an admin",
        "tags": [
          "Admin Module"
        ],
        "description": "Make a user into an admin. Access - Admin only",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the user to make into an admin"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "User does not exist."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/admin/remove/{id}": {
      "post": {
        "summary": "Demote an admin",
        "tags": [
          "Admin Module"
        ],
        "description": "Demote an existing admin. Access - Admin only",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "ID of the admin user to demote"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "User does not exist."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register user",
        "tags": [
          "Authentication Module"
        ],
        "description": "Creates new user account. Access - Open",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login user",
        "tags": [
          "Authentication Module"
        ],
        "description": "Verifies user credentials. Access - Open",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success."
          },
          "403": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "User does not exist."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/auth/verify/{token}": {
      "get": {
        "summary": "Verify a user by their token",
        "tags": [
          "Authentication Module"
        ],
        "description": "Verifies a user. Access - Open",
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Email verification token of a user"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "404": {
            "description": "User does not exist."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/auth/verify/resend": {
      "post": {
        "summary": "Resend a user verification email",
        "tags": [
          "Authentication Module"
        ],
        "description": "Resend a user verification email. Access - Open",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success."
          },
          "404": {
            "description": "User does not exist."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/auth/reset": {
      "post": {
        "summary": "Send a password reset email to a user",
        "tags": [
          "Authentication Module"
        ],
        "description": "Send a password reset email to a user. Access - Open",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success."
          },
          "403": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "User does not exist."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/auth/reset/password": {
      "post": {
        "summary": "Reset a user's password",
        "tags": [
          "Authentication Module"
        ],
        "description": "Reset a user's password Access - Open",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success."
          },
          "403": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "User does not exist."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/check-in/leaderboard": {
      "get": {
        "summary": "Get Check In leaderboard",
        "tags": [
          "Check In Module"
        ],
        "description": "Get check in leader board. Access - Public.",
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/check-in/history/{id}": {
      "get": {
        "summary": "Get Check In history by user ID",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Check In Module"
        ],
        "description": "Get a user's check in history. Access - Admin or User(Own).",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/check-in": {
      "post": {
        "summary": "Add new Check In item",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Check In Module"
        ],
        "description": "Creates new Check in Item. Access - Admin.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "startTime": {
                    "type": "number"
                  },
                  "endTime": {
                    "type": "number"
                  },
                  "points": {
                    "type": "number"
                  },
                  "accessLevel": {
                    "type": "string"
                  },
                  "enableSelfCheckIn": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/check-in/{id}": {
      "patch": {
        "summary": "Edit check in item",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Check In Module"
        ],
        "description": "Edit existing check in item information. All body parameters are optional. If unspecified, the parameters are not updated. Access - Admin.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Check In Item ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "startTime": {
                    "type": "number"
                  },
                  "endTime": {
                    "type": "number"
                  },
                  "points": {
                    "type": "number"
                  },
                  "accessLevel": {
                    "type": "string"
                  },
                  "enableSelfCheckIn": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "get": {
        "summary": "Get Check In item by ID",
        "tags": [
          "Check In Module"
        ],
        "description": "Get a single Check In item by iD. Access - Public.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Check In Item ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "delete": {
        "summary": "Delete Check In item by ID",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Check In Module"
        ],
        "description": "Delete Check In item by specifying ID. Access - Admin.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Check In Item ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/check-in/": {
      "get": {
        "summary": "Get Check In items",
        "tags": [
          "Check In Module"
        ],
        "description": "Get all check in items. Access - Public.",
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/check-in/user": {
      "put": {
        "summary": "Check a User In",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Check In Module"
        ],
        "description": "Checks in a user to a check in item. Access - Admin Users can check in any user for any check in item. Participants can only check themselves in for check-in items that have self check-in enabled.",
        "parameters": [
          {
            "in": "query",
            "name": "userID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "checkInItemID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad Request."
          },
          "404": {
            "description": "check in item or user not found."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/requests/team/{teamId}": {
      "get": {
        "summary": "View incoming and outgoing requests for a team",
        "tags": [
          "Team Requests Module"
        ],
        "description": "View incoming and outgoing requests for a team. Access - User",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "teamId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/requests/user/{userId}": {
      "get": {
        "summary": "View incoming and outgoing requests for a user",
        "tags": [
          "Team Requests Module"
        ],
        "description": "View incoming and outgoing requests for a user. Access - User",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/requests/accept/{requestId}": {
      "post": {
        "summary": "Accept a team request",
        "tags": [
          "Team Requests Module"
        ],
        "description": "Accept a team request.\nIf INVITE request, can only be accessed by team admin.\nIf JOIN request, can only be accessed by owner. Access - User\n",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "requestId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/schedule": {
      "post": {
        "summary": "Add new schedule item",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Schedule Module"
        ],
        "description": "Creates new schedule item. Access - Admin.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "startTime": {
                    "type": "number"
                  },
                  "endTime": {
                    "type": "number"
                  },
                  "location": {
                    "type": "string"
                  },
                  "lat": {
                    "type": "number"
                  },
                  "lng": {
                    "type": "number"
                  },
                  "platform": {
                    "type": "string"
                  },
                  "platformUrl": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/schedule/{id}": {
      "patch": {
        "summary": "Edit schedule item",
        "tags": [
          "Schedule Module"
        ],
        "description": "Edit existing schedule item information. All body parameters are optional. If unspecified, the parameters are not updated. Access - Admin.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Schedule Item ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "startTime": {
                    "type": "number"
                  },
                  "endTime": {
                    "type": "number"
                  },
                  "location": {
                    "type": "string"
                  },
                  "lat": {
                    "type": "number"
                  },
                  "lng": {
                    "type": "number"
                  },
                  "platform": {
                    "type": "string"
                  },
                  "platformUrl": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "get": {
        "summary": "Get Schedule item by ID",
        "tags": [
          "Schedule Module"
        ],
        "description": "Get a single schedule item by iD. Access - Public.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Schedule Item ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "delete": {
        "summary": "Delete Schedule item by ID",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Schedule Module"
        ],
        "description": "Delete schedule item by specifying ID. Access - Admin.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Schedule Item ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/schedule/": {
      "get": {
        "summary": "Get Schedule items",
        "tags": [
          "Schedule Module"
        ],
        "description": "Get all schedule items. Access - Public.",
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/settings": {
      "get": {
        "summary": "Get the settings",
        "tags": [
          "Settings Module"
        ],
        "description": "Get the settings. Access - Admin only",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "User does not exist."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      },
      "put": {
        "summary": "Update the settings",
        "tags": [
          "Settings Module"
        ],
        "description": "Update the settings. Access - Admin only",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "timeOpen": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "timeClose": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "timeConfirm": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "enableWhitelist": {
                    "type": "boolean"
                  },
                  "whitelistedEmails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "waitlistText": {
                    "type": "string"
                  },
                  "acceptanceText": {
                    "type": "string"
                  },
                  "confirmationText": {
                    "type": "string"
                  },
                  "allowMinors": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/teams": {
      "post": {
        "summary": "List all existing teams",
        "tags": [
          "Teams Module"
        ],
        "description": "List all existing teams. Access - Admin",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/user/profile": {
      "put": {
        "summary": "Submit a user application",
        "tags": [
          "User Module"
        ],
        "description": "Submit a user application. Access - User only",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "age": {
                    "type": "integer"
                  },
                  "school": {
                    "type": "string"
                  },
                  "college": {
                    "type": "string",
                    "enum": [
                      "SCS",
                      "CIT",
                      "CFA",
                      "Dietrich",
                      "MCS",
                      "Tepper",
                      "Heinz"
                    ]
                  },
                  "level": {
                    "type": "string",
                    "enum": [
                      "Undergraduate",
                      "Masters",
                      "Doctorate",
                      "Other"
                    ]
                  },
                  "graduationYear": {
                    "type": "integer",
                    "minimum": 2022,
                    "maximum": 2027
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "Male",
                      "Female",
                      "Prefer not to say",
                      "Other"
                    ]
                  },
                  "genderOther": {
                    "type": "string"
                  },
                  "ethnicity": {
                    "type": "string",
                    "enum": [
                      "Native American",
                      "Asian",
                      "Black",
                      "Pacific Islander",
                      "White",
                      "Hispanic",
                      "Other"
                    ]
                  },
                  "ethnicityOther": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "validation": "^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$"
                  },
                  "major": {
                    "type": "string"
                  },
                  "coursework": {
                    "type": "string"
                  },
                  "languages": {
                    "type": "string"
                  },
                  "hackathonExperience": {
                    "type": "string",
                    "enum": [
                      0,
                      "0-3",
                      "4+"
                    ]
                  },
                  "workPermission": {
                    "type": "string",
                    "enum": [
                      "Citizen",
                      "Sponsorship",
                      "No sponsorship"
                    ]
                  },
                  "workLocation": {
                    "type": "string"
                  },
                  "workStrengths": {
                    "type": "string"
                  },
                  "sponsorRanking": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "github": {
                    "type": "string"
                  },
                  "design": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "essays": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "dietaryRestrictions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "shirtSize": {
                    "type": "string",
                    "enum": [
                      "XS",
                      "S",
                      "M",
                      "L",
                      "XL",
                      "XXL",
                      "WXS",
                      "WS",
                      "WM",
                      "WL",
                      "WXL",
                      "WXXL"
                    ]
                  },
                  "wantsHardware": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "string"
                  },
                  "region": {
                    "type": "string,",
                    "enum": [
                      "Rural",
                      "Suburban",
                      "Urban"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "User does not exist."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/user/resume": {
      "post": {
        "summary": "Submit a user's resume",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Users Module"
        ],
        "description": "Submit a user's resume. Must have an associated profile. Access - User",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/user/confirmation": {
      "put": {
        "summary": "Submit a user's confirmation",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Users Module"
        ],
        "description": "Submit a user's confirmation. Must have been accepted. Access - User",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "signatureLiability": {
                    "type": "boolean"
                  },
                  "signaturePhotoRelease": {
                    "type": "boolean"
                  },
                  "signatureCodeOfConduct": {
                    "type": "boolean"
                  },
                  "mlhCodeOfConduct": {
                    "type": "boolean"
                  },
                  "mlhEventLogistics": {
                    "type": "boolean"
                  },
                  "mlhPromotional": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/user/decline": {
      "put": {
        "summary": "Decline a user's acceptance",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Users Module"
        ],
        "description": "Decline a user's acceptance. Must have been accepted. Access - User",
        "responses": {
          "200": {
            "description": "Success."
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Query list of users",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Users Module"
        ],
        "description": "Retrieves list of all users in the database. Access - Admin",
        "responses": {
          "200": {
            "description": "Success."
          },
          "403": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Query user by user ID",
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "tags": [
          "Users Module"
        ],
        "description": "Retrieves user info by user ID, Access - Admin or Owner",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success."
          },
          "403": {
            "description": "Unauthorized."
          },
          "403": {
            "description": "Forbidden."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Admin Module",
      "description": "Endpoints for admin control. Access - Admin only"
    },
    {
      "name": "Authentication Module",
      "description": "Endpoints to manage user authentication."
    },
    {
      "name": "Check In Module",
      "description": "Endpoints to manage check in items and histories."
    },
    {
      "name": "Team Requests Module",
      "description": "Endpoints for team request management. Access - User"
    },
    {
      "name": "Schedule Module",
      "description": "Endpoints to manage dynamic event schedules."
    },
    {
      "name": "Settings Module",
      "description": "Endpoints for settings control. Access - Admin only"
    },
    {
      "name": "Teams Module",
      "description": "Endpoints for team management. Access - User"
    },
    {
      "name": "User Module",
      "description": "Endpoints for personal user control. Access - User only"
    },
    {
      "name": "Users Module",
      "description": "Endpoints to manage users."
    }
  ]
}